" AUTRES {{{1
let mapleader = "," "<Leader> = ',' désormais
set t_Co=256 " Support de 256 couleurs
set encoding=utf-8 " Encodage par défaut
set shell=bash
set makeprg=make

" Utilisation de la souris
set mouse=a
behave xterm
set laststatus=2 " Toujours afficher la barre de statut
set timeoutlen=1000 ttimeoutlen=0 " Eviter les délais lorsqu'on appui sur <Esc>

" COLORSCHEMES {{{1
if has('gui_running')
	" GUI
	set guicursor+=a:blinkon0 " Désactivation du clignotement du curseur
	set background=dark
	colorscheme solarized
else
	" CONSOLE
	if has("unix")
		let s:uname = system("uname -s")
		if s:uname == "Darwin\n"
			" MOLOKAI
			colorscheme molokai
			set background=light
			let g:molokai_original = 1
			let g:rehash256 = 1
			
			" SOLARIZED
			"colorscheme solarized
			"set background=light
			"let g:molokai_original = 1
			"let g:rehash256 = 1

			" SOLARIZED
			"colorscheme solarized
			"set background=light
			"let g:solarized_termtrans = 1
		else
			" Other Unix distribs
			"colorscheme desert
			"set background=light
		endif
	endif
endif
colorscheme zellner

" INDENTATION et AUTOCMD {{{1

" COLORATION SYNTAXIQUE
filetype on
syn on
syntax on

if has("autocmd")
	filetype plugin indent on

	set list!
	augroup vimrcEx
		au!
		
		" For arduino
		"autocmd! BufNewFile,BufRead *.pde setlocal ft=arduino

		" Modification de paramètres pour certains types de fichiers
		autocmd FileType text setlocal textwidth=80

		" Recharge le vimrc à chaque modification
		autocmd BufWritePost .vimrc,vimrc source $MYVIMRC
		" vimrc : méthode de fold = marker
		autocmd BufReadPost .vimrc,vimrc set foldmethod=marker
	augroup END
else
	set autoindent " Indentation auto dans tous les cas
endif

" MISE EN FORME DU TEXTE {{{1
set scrolloff=5 " 5 lignes au-dessus et en-dessous pour les recherches
set confirm " demande que faire lors d'un ':q' avec un fichier modifié

set wrap " Couper les lignes suivant la largeur de la fenêtre
set linebreak " Ne pas couper les mots en fin de lignes
set showbreak=… " En cas de coupures de lignes, caractère de début de ligne

set listchars=tab:▸\ ,nbsp:·,trail:- " Caractères invisibles (autres symboles bizares : ¤¬)
set list " Affiche les caractères invisibles

set tabstop=4 " Nombre d'espaces correspondants à des TAB
set shiftwidth=4 " Nombre d'espaces utilisés par l'indentation
set softtabstop=4 " Nombre d'espaces à supprimer lors de l'effacement d'une TAB
set expandtab " Remplace les TAB par des espaces
set smartindent " Indentation intelligente
set smarttab " Tab intelligent

set history=50 " Nombre de commandes dans l'historique
set showcmd " Affiche la commande que l'on est en train de taper
set backspace=indent,eol,start " Possibilité d'utiliser Effacer et autres...

set ruler " Affiche la position courante en bas à droite
set nu " Affiche les numéros de ligne
set hidden

" Raccourcis clavier {{{1

" Désactive les flèches en mode normal 
"noremap <Up> <NOP>
"noremap <Down> <NOP>
"noremap <Left> <NOP>
"noremap <Right> <NOP>

" Déplacement rapide
noremap <Leader>j 25j
noremap <Leader>k 25k

" Passage en mode normal depuis le mode insertion
"inoremap jk <Esc>
" Enregistre le fichier en tant que root avec :wr
cab wr w !sudo tee %
" Compilation Latex
nnoremap <F2> :w<CR>:!pdflatex '%'<CR>
" Exécution d'un Makefile
nnoremap <F3> :w<CR>:!make<CR>

" Bouger le texte : méta + flèches
nnoremap <M-Down> ddp
nnoremap <M-j> ddp
nnoremap <M-Up> ddkP
nnoremap <M-k> ddkP
"vnoremap <M-Down> xp`[V`]
"vnoremap <M-Up> xkP`[V`]

" Folding
" zi = activer / désactiver le folding
" zj / zk = monter / descendre d'un fold
" zf = créer un fold (sélection visuelle)
" zd = supprimer un fold
" zM = ferme tous les folds
" zR = ouvre tous les folds
set foldmethod=manual
nnoremap <Space> zA
vnoremap <Space> zA
" Pour latex
"set foldmethod=marker
"set foldmarker=\\begin,\\end

" Utilisation de ','
" Copier / Coller du texte depuis l'extérieur
noremap <Leader>y "*y
noremap <Leader>yy "*yy
noremap <Leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>

" Passer un fichier en binaire
"noremap <Leader>b :%!xxd<CR>
"noremap <Leader>nb :%!xxd -r<CR>

" ,m pour maximiser une fenêtre
"nnoremap <Leader>m <C-W>_<C-W><Bar>

" Correction orthographique
" zg(ood) pour ajouter un mot définitivement (zG temporairement)
" zw pour marquer un mot comme mal orthographié
" zuw et zug pour enlever la modif
" :runtime spell/cleanadd.vim pour nettoyer le fichier de spell
"set spelllang=fr
" ,s pour activer/désactiver la correction
"nnoremap <silent> <leader>s :set spell!<CR>

" ,i pour montrer/enlever les caractères invisibles
nnoremap <silent> <leader>i :set list!<CR>

" ,v pour ouvrir le vimrc
"nnoremap <Leader>v :e $MYVIMRC<CR>

" Cohérence avec C et D
"noremap Y y$

" Recherche {{{1
set showmatch " Affiche les parenthèses (et autres) correspondantes
set incsearch " Affiche les résultats de la recherche au moment de la saisie
set ignorecase " Recherche insensible à la casse
set smartcase " Casse intelligente (si MAJ alors insensible sinon non)
set hlsearch "   ---Active la surbrillance des résultats d'une recherche
"set nohlsearch " Désactive la surbrillance des résultats d'une recherche

" Complétion {{{1
set wildmenu " Menu de la complétion automatique
set wildmode=list:longest,list:full " Affiche toutes les possibilités

" Divers {{{1
set splitbelow " Paramètre split pour que la main soit donnée à la partie basse
set splitright " Paramètre split pour que la main soit donnée à la partie droite
"set autochdir " Change automatiquement de répertoire en fonction du fichier ouvert

